// Code.gs - Google Apps Script with Weather Radar Support

function doGet() {
  return HtmlService.createHtmlOutputFromFile('MapDisplay')
    .setTitle('Zip Code Network - 5317 Charlotte with Weather Radar')
    .setWidth(1400)
    .setHeight(900);
}

function getIntroText() {
  // EDIT THIS TEXT TO CHANGE THE ROLLING MESSAGE
  return "INPUT TEXT HERE";
}

function getZipCodesFromSheet() {
  try {
    const ss = SpreadsheetApp.getActiveSpreadsheet();
    const sheet = ss.getSheetByName('FRC');
    
    if (!sheet) {
      throw new Error('Sheet "FRC" not found');
    }
    
    const lastRow = sheet.getLastRow();
    
    if (lastRow < 2) {
      return {};
    }
    
    const zipRange = sheet.getRange(2, 6, lastRow - 1, 1);
    const zipValues = zipRange.getValues();
    
    // Count occurrences of each zip code
    const zipCounts = {};
    zipValues.forEach(row => {
      const zip = String(row[0]).trim();
      if (zip && zip !== '' && zip.length === 5) {
        zipCounts[zip] = (zipCounts[zip] || 0) + 1;
      }
    });
    
    return zipCounts;
    
  } catch (error) {
    Logger.log('Error: ' + error.toString());
    return {};
  }
}

function getAddressCoordinates(address) {
  try {
    const geocoder = Maps.newGeocoder();
    const location = geocoder.geocode(address);
    
    if (location.status === 'OK' && location.results.length > 0) {
      const result = location.results[0];
      return {
        lat: result.geometry.location.lat,
        lng: result.geometry.location.lng
      };
    }
    return null;
  } catch (error) {
    Logger.log('Error geocoding address: ' + error.toString());
    return null;
  }
}

function getZipCodeCoordinates(zipCode) {
  try {
    const geocoder = Maps.newGeocoder();
    const location = geocoder.geocode(zipCode + ', USA');
    
    if (location.status === 'OK' && location.results.length > 0) {
      const result = location.results[0];
      return {
        lat: result.geometry.location.lat,
        lng: result.geometry.location.lng,
        zip: zipCode
      };
    }
    return null;
  } catch (error) {
    Logger.log('Error geocoding ' + zipCode + ': ' + error.toString());
    return null;
  }
}

function getAllZipData() {
  const zipCounts = getZipCodesFromSheet();
  
  if (Object.keys(zipCounts).length === 0) {
    return { error: 'No zip codes found in Column 6 (Current 5 Digit Zip Code)' };
  }
  
  const targetCount = zipCounts['64110'] || 0;
  
  // Geocode the specific address
  const targetCoords = getAddressCoordinates('5317 Charlotte St, Kansas City, MO 64110');
  if (!targetCoords) {
    return { error: 'Could not geocode target address' };
  }
  
  const target = {
    lat: targetCoords.lat,
    lng: targetCoords.lng,
    zip: '5317 Charlotte',
    count: targetCount,
    displayName: '5317 Charlotte'
  };
  
  const allZips = [];
  let totalRespondents = 0;
  
  Object.keys(zipCounts).forEach(zip => {
    totalRespondents += zipCounts[zip];
    
    if (zip !== '64110') {
      const coord = getZipCodeCoordinates(zip);
      if (coord) {
        coord.count = zipCounts[zip];
        allZips.push(coord);
      }
      Utilities.sleep(100);
    }
  });
  
  return {
    target: target,
    zips: allZips,
    totalCount: Object.keys(zipCounts).length,
    totalRespondents: totalRespondents
  };
}
